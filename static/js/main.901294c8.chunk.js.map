{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","moveItems","setMoveItems","CarouselStyle","width","CarouselItemStyle","transform","transition","className","style","map","img","index","src","alt","toString","type","onClick","tmp","max","length","App","state","this","setState","prev","htmlFor","id","value","onChange","e","Number","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.901294c8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\nexport type CarouselProps = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\n\nconst Carousel: React.FC <CarouselProps> = ({\n  images, step, frameSize, itemWidth, animationDuration,\n}) => {\n  const [moveItems, setMoveItems] = useState<number>(0);\n\n  const CarouselStyle: React.CSSProperties = {\n    width: frameSize * itemWidth - 1,\n  };\n\n  const CarouselItemStyle: React.CSSProperties = {\n    transform: `translateX(${moveItems}%)`,\n    transition: `transform ${animationDuration}ms ease-in-out`,\n  };\n\n  const prevItems = () => {\n    const tmp = moveItems + step * 100;\n\n    if (tmp > 0) {\n      setMoveItems(0);\n    } else {\n      setMoveItems(tmp);\n    }\n  };\n\n  const nextItems = () => {\n    const max = images.length * 100 - 100 * frameSize;\n    const tmp = moveItems - step * 100;\n\n    if (tmp < -max) {\n      setMoveItems(-max);\n    } else {\n      setMoveItems(tmp);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\" style={CarouselStyle}>\n        {images.map((img, index) => (\n          <li style={CarouselItemStyle} key={img}>\n            <img\n              src={img}\n              alt={(index + 1).toString()}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button type=\"button\" onClick={prevItems}>Prev</button>\n        <button\n          type=\"button\"\n          onClick={nextItems}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration,\n    } = this.state;\n\n    const increaseItemWidth = () => {\n      this.setState((prev) => ({ itemWidth: prev.itemWidth + 10 }));\n    };\n\n    const decreaseItemWidth = () => {\n      this.setState((prev) => ({ itemWidth: prev.itemWidth - 10 }));\n    };\n\n    const increaseFrameSize = () => {\n      this.setState((prev) => ({ frameSize: prev.frameSize + 1 }));\n    };\n\n    const decreaseFrameSize = () => {\n      this.setState((prev) => ({ frameSize: prev.frameSize - 1 }));\n    };\n\n    const increaseStep = () => {\n      this.setState((prev) => ({ step: prev.step + 1 }));\n    };\n\n    const decreaseStep = () => {\n      this.setState((prev) => ({ step: prev.step - 1 }));\n    };\n\n    const increaseAnimationDuration = () => {\n      this.setState((prev) => ({\n        animationDuration: prev.animationDuration + 100,\n      }));\n    };\n\n    const decreaseAnimationDuration = () => {\n      this.setState((prev) => ({\n        animationDuration: prev.animationDuration + 100,\n      }));\n    };\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n        <div className=\"App__inputs\">\n          <div className=\"App__inputs--item-container\">\n            <button\n              type=\"button\"\n              className=\"App__inputs--item-button\"\n              onClick={increaseItemWidth}\n            >\n              +\n            </button>\n            <label className=\"App__inputs--item\" htmlFor=\"itemId\">\n              Item Width:\n              <input\n                id=\"itemId\"\n                type=\"number\"\n                step={10}\n                value={itemWidth}\n                onChange={\n                  (e) => this.setState({ itemWidth: Number(e.target.value) })\n                }\n              />\n            </label>\n            <button\n              type=\"button\"\n              className=\"App__inputs--item-button\"\n              onClick={decreaseItemWidth}\n            >\n              -\n            </button>\n          </div>\n\n          <div className=\"App__inputs--item-container\">\n            <button\n              type=\"button\"\n              className=\"App__inputs--item-button\"\n              onClick={increaseFrameSize}\n            >\n              +\n            </button>\n            <label className=\"App__inputs--item\" htmlFor=\"frameId\">\n              Frame size:\n              <input\n                id=\"frameId\"\n                type=\"number\"\n                value={frameSize}\n                onChange={\n                  (e) => this.setState({ frameSize: Number(e.target.value) })\n                }\n              />\n            </label>\n            <button\n              type=\"button\"\n              className=\"App__inputs--item-button\"\n              onClick={decreaseFrameSize}\n            >\n              -\n            </button>\n          </div>\n\n          <div className=\"App__inputs--item-container\">\n            <button\n              type=\"button\"\n              className=\"App__inputs--item-button\"\n              onClick={increaseStep}\n            >\n              +\n            </button>\n            <label className=\"App__inputs--item\" htmlFor=\"stepId\">\n              Step:\n              <input\n                id=\"stepId\"\n                type=\"number\"\n                value={step}\n                onChange={\n                  (e) => this.setState({ step: Number(e.target.value) })\n                }\n              />\n            </label>\n            <button\n              type=\"button\"\n              className=\"App__inputs--item-button\"\n              onClick={decreaseStep}\n            >\n              -\n            </button>\n          </div>\n\n          <div className=\"App__inputs--item-container\">\n            <button\n              type=\"button\"\n              className=\"App__inputs--item-button\"\n              onClick={increaseAnimationDuration}\n            >\n              +\n            </button>\n            <label className=\"App__inputs--item\" htmlFor=\"animationID\">\n              Animation Duration:\n              <input\n                id=\"animationID\"\n                type=\"number\"\n                step={100}\n                value={animationDuration}\n                onChange={\n                  (e) => this.setState({\n                    animationDuration: Number(e.target.value),\n                  })\n                }\n              />\n            </label>\n            <button\n              type=\"button\"\n              className=\"App__inputs--item-button\"\n              onClick={decreaseAnimationDuration}\n            >\n              -\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}