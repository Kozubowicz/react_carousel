{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","moveItems","setMoveItems","CarouselStyle","width","CarouselItemStyle","transform","transition","imgStyle","height","className","style","map","img","index","src","alt","toString","type","onClick","tmp","max","length","App","state","this","value","onChange","e","setState","Number","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQA8EeA,EAnE4B,SAAC,GAErC,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,KAAMC,EACV,EADUA,UAAWC,EACrB,EADqBA,UAAWC,EAChC,EADgCA,kBAEpC,EAAkCC,mBAAiB,GAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAqC,CACzCC,MAAOP,EAAYC,GAGfO,EAAyC,CAE7CC,UAAU,cAAD,OAAgBL,EAAhB,OACTM,WAAW,aAAD,OAAeR,EAAf,mBAGNS,EAAgC,CACpCJ,MAAON,EACPW,OAAQX,GAwBV,OACE,sBAAKY,UAAU,WAAWC,MAAOR,EAAjC,UACE,oBAAIO,UAAU,iBAAd,SACGf,EAAOiB,KAAI,SAACC,EAAKC,GAAN,OACV,oBAAIH,MAAON,EAAX,SACE,qBACEU,IAAKF,EACLG,KAAMF,EAAQ,GAAGG,WACjBN,MAAOH,KAJwBK,QAUvC,wBAAQK,KAAK,SAASC,QAnCR,WAChB,IAAMC,EAAMnB,EAAYL,EAAOE,EAG7BI,EADEkB,EAAM,EACK,EAEAA,IA6Bb,kBACA,wBACEF,KAAK,SACLC,QA5BY,WAChB,IAAME,EAAM1B,EAAO2B,OAASxB,EAAYA,EAAYD,EAC9CuB,EAAMnB,EAAYL,EAAOE,EAG7BI,EADEkB,GAAOC,GACKA,EAEDD,IAsBX,UAAQ,OAHV,sBCvDAG,E,4MACJC,MAAQ,CACN7B,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFG,UAAW,IACXD,UAAW,EACXD,KAAM,EACNG,kBAAmB,K,4CAGrB,WAAU,IAAD,OACP,EAEI0B,KAAKD,MADP7B,EADF,EACEA,OAAQC,EADV,EACUA,KAAMC,EADhB,EACgBA,UAAWC,EAD3B,EAC2BA,UAAWC,EADtC,EACsCA,kBAGtC,OACE,sBAAKW,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCf,EAAO2B,OAA1C,aAEA,cAAC,EAAD,CACE3B,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,IAErB,sBAAKW,UAAU,cAAf,UACE,wBAAOA,UAAU,oBAAjB,wBAEE,uBACEQ,KAAK,SACLQ,MAAO5B,EACP6B,SACE,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAE/B,UAAWgC,OAAOF,EAAEG,OAAOL,eAIxD,wBAAOhB,UAAU,oBAAjB,wBAEE,uBACEQ,KAAK,SACLQ,MAAO7B,EACP8B,SACE,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEhC,UAAWiC,OAAOF,EAAEG,OAAOL,eAIxD,wBAAOhB,UAAU,oBAAjB,kBAEE,uBACEQ,KAAK,SACLQ,MAAO9B,EACP+B,SACE,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEjC,KAAMkC,OAAOF,EAAEG,OAAOL,eAInD,wBAAOhB,UAAU,oBAAjB,gCAEE,uBACEQ,KAAK,SACLQ,MAAO3B,EACP4B,SACE,SAACC,GAAD,OAAO,EAAKC,SAAS,CACnB9B,kBAAmB+B,OAAOF,EAAEG,OAAOL,yB,GA3EnCM,IAAMC,WAsFTV,IC/FfW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c3a3939c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\nexport type CarouselProps = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\n\nconst Carousel: React.FC <CarouselProps> = ({\n  images, step, frameSize, itemWidth, animationDuration,\n}) => {\n  const [moveItems, setMoveItems] = useState<number>(0);\n\n  const CarouselStyle: React.CSSProperties = {\n    width: frameSize * itemWidth,\n  };\n\n  const CarouselItemStyle: React.CSSProperties = {\n\n    transform: `translateX(${moveItems}px)`,\n    transition: `transform ${animationDuration}ms ease-in-out`,\n  };\n\n  const imgStyle: React.CSSProperties = {\n    width: itemWidth,\n    height: itemWidth,\n  };\n\n  const prevItems = () => {\n    const tmp = moveItems + step * itemWidth;\n\n    if (tmp > 0) {\n      setMoveItems(0);\n    } else {\n      setMoveItems(tmp);\n    }\n  };\n\n  const nextItems = () => {\n    const max = images.length * itemWidth - itemWidth * frameSize;\n    const tmp = moveItems - step * itemWidth;\n\n    if (tmp < -max) {\n      setMoveItems(-max);\n    } else {\n      setMoveItems(tmp);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\" style={CarouselStyle}>\n      <ul className=\"Carousel__list\">\n        {images.map((img, index) => (\n          <li style={CarouselItemStyle} key={img}>\n            <img\n              src={img}\n              alt={(index + 1).toString()}\n              style={imgStyle}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button type=\"button\" onClick={prevItems}>Prev</button>\n      <button\n        type=\"button\"\n        onClick={nextItems}\n        data-cy=\"next\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n        <div className=\"App__inputs\">\n          <label className=\"App__inputs--item\">\n            Item Width:\n            <input\n              type=\"number\"\n              value={itemWidth}\n              onChange={\n                (e) => this.setState({ itemWidth: Number(e.target.value) })\n              }\n            />\n          </label>\n          <label className=\"App__inputs--item\">\n            Frame size:\n            <input\n              type=\"number\"\n              value={frameSize}\n              onChange={\n                (e) => this.setState({ frameSize: Number(e.target.value) })\n              }\n            />\n          </label>\n          <label className=\"App__inputs--item\">\n            Step:\n            <input\n              type=\"number\"\n              value={step}\n              onChange={\n                (e) => this.setState({ step: Number(e.target.value) })\n              }\n            />\n          </label>\n          <label className=\"App__inputs--item\">\n            Animation Duration:\n            <input\n              type=\"number\"\n              value={animationDuration}\n              onChange={\n                (e) => this.setState({\n                  animationDuration: Number(e.target.value),\n                })\n              }\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}