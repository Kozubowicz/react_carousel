{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","moveItems","setMoveItems","CarouselStyle","width","CarouselItemStyle","transform","transition","className","style","map","img","index","src","alt","toString","type","onClick","tmp","max","length","App","state","this","htmlFor","id","value","onChange","e","setState","Number","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAwEeA,EA7D4B,SAAC,GAErC,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,KAAMC,EACV,EADUA,UAAWC,EACrB,EADqBA,UAAWC,EAChC,EADgCA,kBAEpC,EAAkCC,mBAAiB,GAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAqC,CACzCC,MAAOP,GAAaC,EAAY,IAG5BO,EAAyC,CAC7CC,UAAU,cAAD,OAAgBL,EAAhB,OACTM,WAAW,aAAD,OAAeR,EAAf,mBAwBZ,OACE,sBAAKS,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAiBC,MAAON,EAAtC,SACGR,EAAOe,KAAI,SAACC,EAAKC,GAAN,OACV,oBAAIH,MAAOJ,EAAX,SACE,qBACEQ,IAAKF,EACLG,KAAMF,EAAQ,GAAGG,WACjBX,MAAON,KAJwBa,QAUvC,wBAAQK,KAAK,SAASC,QAnCR,WAChB,IAAMC,EAAMjB,EAAYL,EAAOE,EAG7BI,EADEgB,EAAM,EACK,EAEAA,IA6Bb,kBACA,wBACEF,KAAK,SACLC,QA5BY,WAChB,IAAME,EAAMxB,EAAOyB,OAAStB,EAAYA,EAAYD,EAC9CqB,EAAMjB,EAAYL,EAAOE,EAG7BI,EADEgB,GAAOC,GACKA,EAEDD,IAsBX,UAAQ,OAHV,sBCjDAG,E,4MACJC,MAAQ,CACN3B,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFG,UAAW,IACXD,UAAW,EACXD,KAAM,EACNG,kBAAmB,K,4CAGrB,WAAU,IAAD,OACP,EAEIwB,KAAKD,MADP3B,EADF,EACEA,OAAQC,EADV,EACUA,KAAMC,EADhB,EACgBA,UAAWC,EAD3B,EAC2BA,UAAWC,EADtC,EACsCA,kBAGtC,OACE,sBAAKS,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCb,EAAOyB,OAA1C,aAEA,cAAC,EAAD,CACEzB,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,IAErB,sBAAKS,UAAU,cAAf,UACE,wBAAOA,UAAU,oBAAoBgB,QAAQ,SAA7C,wBAEE,uBACEC,GAAG,SACHT,KAAK,SACLU,MAAO5B,EACP6B,SACE,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAE/B,UAAWgC,OAAOF,EAAEG,OAAOL,eAIxD,wBAAOlB,UAAU,oBAAoBgB,QAAQ,UAA7C,wBAEE,uBACEC,GAAG,UACHT,KAAK,SACLU,MAAO7B,EACP8B,SACE,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEhC,UAAWiC,OAAOF,EAAEG,OAAOL,eAIxD,wBAAOlB,UAAU,oBAAoBgB,QAAQ,SAA7C,kBAEE,uBACEC,GAAG,SACHT,KAAK,SACLU,MAAO9B,EACP+B,SACE,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEjC,KAAMkC,OAAOF,EAAEG,OAAOL,eAInD,wBAAOlB,UAAU,oBAAoBgB,QAAQ,cAA7C,gCAEE,uBACEC,GAAG,cACHT,KAAK,SACLU,MAAO3B,EACP4B,SACE,SAACC,GAAD,OAAO,EAAKC,SAAS,CACnB9B,kBAAmB+B,OAAOF,EAAEG,OAAOL,yB,GA/EnCM,IAAMC,WA0FTZ,ICnGfa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3ca9796e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\nexport type CarouselProps = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\n\nconst Carousel: React.FC <CarouselProps> = ({\n  images, step, frameSize, itemWidth, animationDuration,\n}) => {\n  const [moveItems, setMoveItems] = useState<number>(0);\n\n  const CarouselStyle: React.CSSProperties = {\n    width: frameSize * (itemWidth - 1),\n  };\n\n  const CarouselItemStyle: React.CSSProperties = {\n    transform: `translateX(${moveItems}px)`,\n    transition: `transform ${animationDuration}ms ease-in-out`,\n  };\n\n  const prevItems = () => {\n    const tmp = moveItems + step * itemWidth;\n\n    if (tmp > 0) {\n      setMoveItems(0);\n    } else {\n      setMoveItems(tmp);\n    }\n  };\n\n  const nextItems = () => {\n    const max = images.length * itemWidth - itemWidth * frameSize;\n    const tmp = moveItems - step * itemWidth;\n\n    if (tmp < -max) {\n      setMoveItems(-max);\n    } else {\n      setMoveItems(tmp);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\" style={CarouselStyle}>\n        {images.map((img, index) => (\n          <li style={CarouselItemStyle} key={img}>\n            <img\n              src={img}\n              alt={(index + 1).toString()}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button type=\"button\" onClick={prevItems}>Prev</button>\n      <button\n        type=\"button\"\n        onClick={nextItems}\n        data-cy=\"next\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n        <div className=\"App__inputs\">\n          <label className=\"App__inputs--item\" htmlFor=\"itemId\">\n            Item Width:\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              value={itemWidth}\n              onChange={\n                (e) => this.setState({ itemWidth: Number(e.target.value) })\n              }\n            />\n          </label>\n          <label className=\"App__inputs--item\" htmlFor=\"frameId\">\n            Frame size:\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              value={frameSize}\n              onChange={\n                (e) => this.setState({ frameSize: Number(e.target.value) })\n              }\n            />\n          </label>\n          <label className=\"App__inputs--item\" htmlFor=\"stepId\">\n            Step:\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              value={step}\n              onChange={\n                (e) => this.setState({ step: Number(e.target.value) })\n              }\n            />\n          </label>\n          <label className=\"App__inputs--item\" htmlFor=\"animationID\">\n            Animation Duration:\n            <input\n              id=\"animationID\"\n              type=\"number\"\n              value={animationDuration}\n              onChange={\n                (e) => this.setState({\n                  animationDuration: Number(e.target.value),\n                })\n              }\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}